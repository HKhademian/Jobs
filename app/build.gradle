apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.akaita.android.easylauncher'

android {
  compileSdkVersion 28
  flavorDimensions 'server'

  defaultConfig {
    applicationId 'ir.jobs.jobs'
    minSdkVersion 16
    targetSdkVersion 28
    versionCode 2
    versionName '0.1.2'
    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'

    multiDexEnabled true
    vectorDrawables.useSupportLibrary = true
  }

  productFlavors {
    mock {
      dimension 'server'
      applicationIdSuffix ".mock"
      versionNameSuffix "-mock"

      buildConfigField "Boolean", "MOCK", "true"
    }
    server {
      dimension 'server'
      buildConfigField "Boolean", "MOCK", "false"
    }
  }

  buildTypes {
    debug {
      buildConfigField "String", "HOST", "\"http://localhost:3000/api/\""

      applicationIdSuffix ".debug"
      versionNameSuffix "-debug"
      debuggable true
      minifyEnabled false
    }
    release {
      buildConfigField "String", "HOST", "\"http://jobs.ir/api/\""

      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  packagingOptions {
    // exclude 'META-INF/DEPENDENCIES'
    // exclude 'META-INF/NOTICE'
    // exclude 'META-INF/LICENSE'
    // exclude 'META-INF/LICENSE.txt'
    // exclude 'META-INF/NOTICE.txt'
    // exclude 'META-INF/main.kotlin_module'
    // merge '**/LICENSE.txt'
    // merge '**/NOTICE.txt'
  }
}

dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')

  /* Kotlin & anko ui */
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//  implementation "org.jetbrains.anko:anko-sdk25:$anko_version"
//  implementation "org.jetbrains.anko:anko-appcompat-v7:$anko_version"
  implementation "org.jetbrains.anko:anko-sdk25-coroutines:$anko_version"
//  implementation "org.jetbrains.anko:anko-appcompat-v7-coroutines:$anko_version"
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.23.4'

  /*
   * https://github.com/gildor/kotlin-coroutines-retrofit
   * Kotlin Coroutines extras
   */
  // implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-experimental-adapter:1.0.0'
  implementation 'ru.gildor.coroutines:kotlin-coroutines-retrofit:0.11.0'

  /*
   * https://github.com/chibatching/Kotpref
   * Kotlin easy shared preferences
   */
  implementation 'com.chibatching.kotpref:kotpref:2.5.0'
  implementation 'com.chibatching.kotpref:enum-support:2.5.0'

  /* Android Support */
  implementation 'com.android.support:appcompat-v7:28.0.0-alpha3'
  implementation 'com.android.support:design:28.0.0-alpha3'
  implementation 'com.android.support:cardview-v7:28.0.0-alpha3'
  implementation 'com.android.support.constraint:constraint-layout:1.1.2'
  implementation 'com.android.support:support-vector-drawable:28.0.0-alpha3'
  implementation 'com.android.support:support-v4:28.0.0-alpha3'
  implementation 'com.android.support:recyclerview-v7:28.0.0-alpha3'

  /* General Testing */
  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'com.android.support.test:runner:1.0.2'
  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

  /* ReactiveX */
  implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
  implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
  implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

  /* Leaks */
  // debugImplementation "com.squareup.leakcanary:leakcanary-android:$leaks_version"
  // releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leaks_version"
  implementation "com.squareup.leakcanary:leakcanary-android-no-op:$leaks_version"

  /* ViewModel and LiveData */
  implementation "android.arch.lifecycle:extensions:$arch_lifecycle_version"
  // implementation "android.arch.lifecycle:reactivestreams:1.1.0"
  kapt "android.arch.lifecycle:compiler:$arch_lifecycle_version"
  testImplementation "android.arch.core:core-testing:$arch_lifecycle_version"
  /* Room for database */
  implementation "android.arch.persistence.room:runtime:$arch_room_version"
  kapt "android.arch.persistence.room:compiler:$arch_room_version"
  testImplementation "android.arch.persistence.room:testing:$arch_room_version"
  /* Paging */
  // implementation "android.arch.paging:runtime:$arch_paging_version"
  // testImplementation "android.arch.paging:common:$arch_paging_version"

  /* SquareUp */
  implementation 'com.squareup.okhttp3:okhttp:3.10.0'
  implementation 'com.squareup.okio:okio:1.14.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'
  implementation 'com.squareup.moshi:moshi:1.6.0'
  implementation 'com.squareup.retrofit2:retrofit:2.4.0'
  // implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
  // implementation 'com.squareup.retrofit2:converter-gson:2.0.0'
  implementation 'com.squareup.retrofit2:converter-moshi:2.4.0'
  mockImplementation 'com.squareup.retrofit2:retrofit-mock:2.4.0'
  implementation('com.squareup.picasso:picasso:2.71828') {
    exclude group: 'com.android.support'
  }

  /* Dependency Injector|Manager */
  // implementation 'org.koin:koin-android:0.9.2'
  // implementation 'com.google.dagger:dagger:2.13'
  // kapt 'com.google.dagger:dagger-compiler:2.13'

  /*
   * https://github.com/pinball83/Masked-Edittext
   * Mask EditText
   */
  implementation 'com.github.pinball83:masked-edittext:1.0.4'

  /*
   * https://github.com/hdodenhof/CircleImageView
   * Circular Image
   */
  implementation "de.hdodenhof:circleimageview:$civ_version"

  /* Badge View */
  // implementation "com.github.nekocode:Badge:$badge_version"

  /* MarkDown support */
  // implementation "in.uncod.android.bypass:bypass:$bypass_version"

  /*
   * https://github.com/mdeanda/lorem
   * lorem ipsum generator
   */
  mockImplementation('com.thedeanda:lorem:2.1') {
    exclude group: 'org.jetbrains.kotlin'
  }

  /* Chuck : OkHttp3 monitor */
  // debugImplementation 'com.readystatesoftware.chuck:library:1.1.0'
  // releaseImplementation 'com.readystatesoftware.chuck:library-no-op:1.1.0'

  /*
   * https://github.com/dlew/joda-time-android
   * https://github.com/JodaOrg/joda-time
   * Joda time and relative times
   */
  implementation 'net.danlew:android.joda:2.9.9.4'
  // implementation 'com.github.curioustechizen.android-ago:library:1.4.0'

  /*
   * https://github.com/vdurmont/emoji-java
   * Emoji support
   */
  implementation 'com.vdurmont:emoji-java:4.0.0'

  /*
   * https://github.com/llollox/Android-Toggle-Switch
   * ToggleView
   */
  implementation 'com.llollox:androidtoggleswitch:2.0.1'

  /*
  * Tag View
  * https://github.com/2dxgujun/AndroidTagGroup
  */
  implementation 'me.gujun.android.taggroup:library:1.4@aar'

  /*
  * What's news dialog
  * https://github.com/TonnyL/WhatsNew
  */
  implementation 'io.github.tonnyl:whatsnew:0.1.1'

  /*
   * calligraphy3: Custom global fonts
   * viewPump: calligraphy3 dependency to inject views
   * https://github.com/InflationX/Calligraphy
   * https://github.com/InflationX/ViewPump
   */
  //  implementation 'io.github.inflationx:calligraphy3:3.0.0'
  //  implementation 'io.github.inflationx:viewpump:1.0.0'
}

kotlin {
  experimental {
    coroutines "enable"
  }
}
